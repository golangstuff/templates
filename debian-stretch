#!/bin/sh

EXTRA=openssh-server,openssh-client,iputils-ping,vim

fail() {
    echo $2
    exit $1
}

. ./config

# Shortcuts
CWD=`pwd`
ROOTRW=$BTRFS_ROOT/$BTRFS_BUILD/rootfs.rw
VARRW=$BTRFS_ROOT/$BTRFS_BUILD/var.rw
OPTRW=$BTRFS_ROOT/$BTRFS_BUILD/opt.rw
HOMERW=$BTRFS_ROOT/$BTRFS_BUILD/home.rw
ROOTRO=$BTRFS_ROOT/$BTRFS_BUILD/rootfs
VARRO=$BTRFS_ROOT/$BTRFS_BUILD/var
OPTRO=$BTRFS_ROOT/$BTRFS_BUILD/opt
HOMERO=$BTRFS_ROOT/$BTRFS_BUILD/home
DELTAS=$BTRFS_ROOT/$BTRFS_BUILD/deltas

# Do a bit of sanity test
[ ! -d $BTRFS_ROOT ] && fail 1 "The directory $BTRFS_ROOT does not exists!" 

[ -d $BTRFS_ROOT/$BTRFS_BUILD ] && fail 2 "The directory $BTRFS_ROOT/$BTRFS_BUILD already exists!" 

sudo -v || fail 3 "SUDO does not appear to be working"

# Create necessary subvolumes
sudo btrfs subvolume create $BTRFS_ROOT/$BTRFS_BUILD || fail 3 "Unable to create build directory $BTRFS_ROOT/$BTRFS_BUILD"
sudo btrfs subvolume create $ROOTRW || fail 3 "Unable to create rootfs directory $ROOTRW"

# Bootstrap Debian
sudo debootstrap --include=$EXTRA stable $ROOTRW

# Mount proc and sys
sudo mount sysfs $ROOTRW/sys -t sysfs
sudo mount proc $ROOTRW/proc -t proc

# Update hostname
cat <<-EOF | sudo chroot $ROOTRW bin/bash -c "cat >/etc/hostname"
debian-stretch
EOF

# Create /etc/networking/interfaces
cat <<-EOF | sudo chroot $ROOTRW bin/bash -c "cat >/etc/network/interfaces"
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
EOF

# Set apt-get repos
cat <<-EOF | sudo chroot $ROOTRW bin/bash -c "cat >/etc/apt/sources."
deb http://httpredir.debian.org/debian/ stable main contrib non-free
deb http://security.debian.org/ stable/updates main contrib non-free
deb http://httpredir.debian.org/debian/ stable-updates main contrib non-free
EOF

# Run update
sudo chroot $ROOTRW bin/bash -c "apt-get update"

# Optional extras
#sudo chroot $ROOTRW bin/bash -c "apt-get install aptitude"

# Create package list
sudo chroot $ROOTRW bin/bash -c "dpkg --get-selections > /packages"
sudo mv $ROOTRW/packages $BTRFS_ROOT/$BTRFS_BUILD

# Clean up 
sudo chroot $ROOTRW bin/bash -c "apt-get clean"
sudo chroot $ROOTRW bin/bash -c "rm /var/cache/apt/*bin"

# Unmount
sudo umount $ROOTFS/sys
sudo umount $ROOTFS/proc

# Deal with mounts
sudo btrfs subvolume create $VARRW
sudo mv $ROOTRW/var/* $VARRW

sudo btrfs subvolume create $OPTRW
sudo mv $ROOTRW/opt/* $OPTRW

sudo btrfs subvolume create $HOMERW
sudo mv $ROOTRW/home/* $HOMERW

# Finally snapshot all
sudo btrfs subvolume snapshot -r $ROOTRW $ROOTRO
sudo btrfs subvolume snapshot -r $VARRW $VARRO
sudo btrfs subvolume snapshot -r $OPTRW $OPTRO
sudo btrfs subvolume snapshot -r $HOMERW $HOMERO

# Save deltas
sudo mkdir $DELTAS
sudo btrfs send -f $DELTAS/rootfs.delta $ROOTRO
sudo btrfs send -f $DELTAS/var.delta $VARRO
sudo btrfs send -f $DELTAS/opt.delta $OPTRO
sudo btrfs send -f $DELTAS/home.delta $HOMERO

# Make sure deltas can be read by a normal user
sudo chmod 644 $DELTAS/*

# Delete subvolumes
sudo btrfs subvolume delete $ROOTRW
sudo btrfs subvolume delete $ROOTRO
sudo btrfs subvolume delete $VARRW
sudo btrfs subvolume delete $VARRO
sudo btrfs subvolume delete $OPTRW
sudo btrfs subvolume delete $OPTRO
sudo btrfs subvolume delete $HOMERW
sudo btrfs subvolume delete $HOMERO

# Create config
cat <<-EOF | sudo tee $BTRFS_ROOT/$BTRFS_BUILD/config
# Subutai debian-stretch template
lxc.arch = amd64
# Network configuration
lxc.network.type = veth
lxc.network.flags = up
lxc.network.hwaddr = 00:16:3e:c2:4d:fa
subutai.config.path = /snap/subutai-master/current/etc
subutai.parent = debian-stretch-0.0.5
lxc.mount.entry = /var/snap/subutai-master/common/lxc/debian-stretch-0.0.5/home home none bind,rw 0 0
lxc.mount.entry = /var/snap/subutai-master/common/lxc/debian-stretch-0.0.5/opt opt none bind,rw 0 0
lxc.mount.entry = /var/snap/subutai-master/common/lxc/debian-stretch-0.0.5/var var none bind,rw 0 0
lxc.include = /snap/subutai-master/current/share/lxc/config/ubuntu.common.conf
subutai.template.package = /mnt/lib/lxc/lxc-data/tmpdir/debian-stretch-0.0.5-subutai-template_1.0.0_amd64.tar.gz
subutai.template.version = 1.0.0
lxc.rootfs = /var/snap/subutai-master/common/lxc/debian-stretch-0.0.5/rootfs
lxc.utsname = debian-stretch-0.0.5
lxc.mount = /var/snap/subutai-master/common/lxc/debian-stretch-0.0.5/fstab
lxc.id_map = u 0 1114112 65536
lxc.id_map = g 0 1114112 65536

# systemD configuration
lxc.mount.auto = cgroup:mixed
lxc.autodev = 1
lxc.kmsg = 0
lxc.include = /snap/subutai-master/current/share/lxc/config/ubuntu.userns.conf
lxc.network.link = lxcbr0
lxc.rootfs.mount = /var/snap/subutai-master/common/lxc/debian-stretch-0.0.5/rootfs
lxc.network.script.up = /snap/subutai-master/current/bin/create_ovs_interface

EOF

cat <<-EOF | sudo tee $BTRFS_ROOT/$BTRFS_BUILD/fstab
EOF

# Bundle the darn thing in a tar.gz archive
[ -d $CWD/build ] || mkdir $CWD/build
(cd $BTRFS_ROOT/$BTRFS_BUILD ; tar cz * >$CWD/build/debian-stretch-0.0.5_subutai-template_1.0.0_amd64.tar.gz)

# Finally nuke build
sudo btrfs subvolume delete $BTRFS_ROOT/$BTRFS_BUILD

exit 0

# vim: ts=4 et nowrap autoindent
